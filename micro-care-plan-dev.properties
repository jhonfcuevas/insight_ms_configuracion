spring.application.name=micro-care-plan
server.port=${PORT:0}
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#datos de mv para archivos
config.mv.service.token=http://192.168.1.88:9090/auth/realms/mvapi/protocol/openid-connect/token
config.mv.service.username=swagger
config.mv.service.password=swagger
config.mv.service.attach=http://192.168.1.88:8080/api/encounter/v1/attach

## default connection pool
spring.datasource.hikari.connection-timeout = 20000
spring.datasource.hikari.minimum-idle= 10 
spring.datasource.hikari.maximum-pool-size= 1
spring.datasource.hikari.idle-timeout=10000 
spring.datasource.hikari.max-lifetime= 1000 
spring.datasource.hikari.auto-commit =true

## PostgreSQL
#spring.datasource.url=jdbc:postgresql://190.25.53.76:5432/INSIGHTS?ApplicationName=micro-care-plan
spring.datasource.url=jdbc:postgresql://localhost:5432/INSIGHTS?ApplicationName=micro-care-plan
spring.datasource.username=usrinsights
spring.datasource.password=1n51ght5.

#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop


# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

feign.client.config.default.connectTimeout= 160000000
feign.client.config.default.readTimeout= 160000000

#spring.sleuth.sampler.probability=1.0

# configuracion logger
logging.level.org.hibernate.SQL=debug
#logging.level.root=ERROR
#logging.file=/root/deployment/logs/${spring.application.name}.log
# Logging pattern for the console
#logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n
#logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n
#logging.file.max-size= 200Mb
